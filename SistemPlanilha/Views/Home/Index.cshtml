@model DashboardViewModel
@using System.Text.Json

@{
    ViewData["Title"] = "Painel Principal";
}

<div class="row g-3 mb-4">
    <div class="col-md-4">
        <div class="card shadow-sm text-center">
            <div class="card-body">
                <h5 class="card-title text-muted">Total de Itens no Inventário</h5>
                <p class="card-text fs-1 fw-bold">@Model.TotalItensInventario</p>
                <a asp-controller="Inventario" asp-action="Index" class="btn btn-sm btn-outline-primary">Ver todos</a>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card shadow-sm text-center text-warning border-warning">
            <div class="card-body">
                <h5 class="card-title text-muted">Manutenções Abertas</h5>
                <p class="card-text fs-1 fw-bold">@Model.ManutencoesAbertas</p>
                 <a asp-controller="Manutencao" asp-action="Index" class="btn btn-sm btn-outline-warning">Ver todas</a>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card shadow-sm text-center">
            <div class="card-body">
                <h5 class="card-title text-muted">Itens em Estoque</h5>
                <p class="card-text fs-1 fw-bold">@Model.ItensEmEstoque</p>
                <a asp-controller="Inventario" asp-action="Index" class="btn btn-sm btn-outline-primary">Ver todos</a>
            </div>
        </div>
    </div>
</div>

<div class="row g-3">
    <div class="col-lg-8">
        <div class="card shadow-sm h-100">
            <div class="card-header">
                <h4 class="mb-0"><i class="bi bi-clock-history"></i> Últimas Manutenções Registradas</h4>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Item (ID)</th>
                                <th>Descrição</th>
                                <th>Status</th>
                                <th>Data</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.UltimasManutencoes.Any())
                            {
                                @foreach (var manutencao in Model.UltimasManutencoes)
                                {
                                    <tr>
                                        <td>@manutencao.PcNameInventario (@manutencao.InventarioId)</td>
                                        <td>
                                            <span class="d-inline-block text-truncate" style="max-width: 200px;" title="@manutencao.Descricao">
                                                @manutencao.Descricao
                                            </span>
                                        </td>
                                        <td><span class="badge bg-secondary">@manutencao.StatusNome</span></td>
                                        <td>@manutencao.DataCriacao</td>
                                        <td class="text-end">
                                            <a asp-controller="Manutencao" asp-action="Details" asp-route-id="@manutencao.Id" class="btn btn-sm btn-outline-primary">Ver Detalhes</a>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="5" class="text-center text-muted">Nenhuma manutenção recente encontrada.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="card shadow-sm h-100">
            <div class="card-header">
                <h4 class="mb-0"><i class="bi bi-pie-chart-fill"></i> Inventário por Situação</h4>
            </div>
            <div class="card-body d-flex justify-content-center align-items-center">
                <canvas id="graficoSituacao"></canvas>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    @{
        var labelsJson = JsonSerializer.Serialize(Model.GraficoSituacaoLabels);
        var dataJson = JsonSerializer.Serialize(Model.GraficoSituacaoData);
        var colorsJson = JsonSerializer.Serialize(Model.GraficoSituacaoColors);
    }

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const canvas = document.getElementById('graficoSituacao');

            // Arrays vindos do servidor (um-para-um com as fatias)
            const labels = @Html.Raw(labelsJson);
            const data = @Html.Raw(dataJson);
            const colors = @Html.Raw(colorsJson);

            if (Array.isArray(data) && data.length > 0) {
                // Garantia extra: se por algum motivo o array de cores vier menor,
                // repetimos de forma segura para evitar falta de cor
                const safeColors = data.map((_, i) => colors[i % colors.length]);

                new Chart(canvas, {
                    type: 'doughnut',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Nº de Itens',
                            data: data,
                            backgroundColor: safeColors,
                            // borda branca para destacar cada fatia (evita ter que gerar outro array)
                            borderColor: Array(data.length).fill('#ffffff'),
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: { position: 'top' }
                        }
                    }
                });
            } else {
                // Sem dados: mostra texto no centro do canvas
                const ctx = canvas.getContext('2d');
                const rect = canvas.getBoundingClientRect();
                ctx.textAlign = 'center';
                ctx.textBaseline = 'middle';
                ctx.font = '16px Poppins, sans-serif';
                ctx.fillText('Sem dados para exibir o gráfico', rect.width / 2, rect.height / 2);
            }
        });
    </script>
}
